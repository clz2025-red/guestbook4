name: Deploy WAR to EC2 Tomcat  # 워크플로우 이름

on:
  push:
    branches:
      - master
  workflow_dispatch:  # 수동 실행도 가능하게 설정

jobs:
  deploy:
    runs-on: ubuntu-latest  # GitHub에서 제공하는 Ubuntu 환경에서 실행

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3  # 저장소 코드 가져오기

      - name: Set up Java
        uses: actions/setup-java@v3  # Java 17 설치
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build WAR with Maven
        # pom.xml에 <finalName>ROOT</finalName> 설정이 되어 있다고 가정하고 빌드합니다.
        run: mvn clean package -DskipTests  # 테스트 생략하고 WAR 빌드

      - name: Copy ROOT.war to EC2 (to home directory)
        uses: appleboy/scp-action@v0.1.7  # ROOT.war 파일을 EC2 인스턴스로 전송
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "target/ROOT.war" # 이제 소스 파일 이름이 ROOT.war로 고정됩니다.
          target: "/home/ec2-user/"

      - name: Deploy WAR and restart Tomcat
        uses: appleboy/ssh-action@v1.0.3  # EC2 내에서 명령어 실행
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "[1] EC2 홈 디렉토리에서 ROOT.war 파일 존재 여부 확인"
            # /home/ec2-user/ 디렉토리에 ROOT.war 파일이 있는지 확인합니다.
            if [ ! -f "/home/ec2-user/ROOT.war" ]; then
              echo "오류: /home/ec2-user/ 디렉토리에서 ROOT.war 파일을 찾을 수 없습니다."
              exit 1
            fi
            echo "ROOT.war 파일 존재 확인 완료."

            echo "[2] 기존 ROOT.war 및 ROOT 폴더 삭제"
            # 톰캣 웹앱 디렉토리에서 기존 ROOT.war 파일과 ROOT 폴더를 삭제합니다.
            sudo rm -rf /usr/local/tomcat/webapps/ROOT.war
            sudo rm -rf /usr/local/tomcat/webapps/ROOT
            echo "기존 배포 파일 삭제 완료."

            echo "[3] WAR 파일 이동"
            # /home/ec2-user/ 에 있는 ROOT.war 파일을 톰캣 웹앱 디렉토리로 옮깁니다.
            sudo mv /home/ec2-user/ROOT.war /usr/local/tomcat/webapps/ROOT.war
            if [ $? -ne 0 ]; then # 이전 'mv' 명령이 실패했다면
              echo "오류: WAR 파일 이동 실패."
              exit 1
            fi
            echo "WAR 파일 이동 완료: /usr/local/tomcat/webapps/ROOT.war"

            echo "[4] 톰캣 프로세스 종료 (없으면 무시)"
            # 현재 실행 중인 모든 톰캣 프로세스를 강제로 종료합니다.
            sudo pkill -f tomcat || true
            sleep 5 # 톰캣이 완전히 종료될 때까지 5초 대기합니다.
            echo "Tomcat 종료 시도 완료."

            echo "[5] 톰캣 시작"
            # 톰캣 시작 스크립트를 실행합니다.
            sudo /usr/local/tomcat/bin/startup.sh
            sleep 10 # 톰캣이 완전히 시작될 때까지 10초 대기합니다.
            echo "Tomcat 시작 시도 완료."

            echo "[6] 톰캣 프로세스 실행 확인"
            # 'pgrep -f tomcat' 명령을 사용하여 'tomcat'이라는 이름을 가진 프로세스가 실행 중인지 확인합니다.
            if pgrep -f tomcat > /dev/null; then
              echo "Tomcat 프로세스가 성공적으로 실행 중입니다."
            else
              echo "오류: Tomcat이 시작되지 않았습니다. EC2 인스턴스에 접속하여 로그를 확인하십시오."
              exit 1 # 톰캣이 시작되지 않았다면 워크플로우를 실패 처리합니다.
            fi
